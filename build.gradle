/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'org.jreleaser' version '1.15.0'
}

project.ext.lwjglVersion = "3.3.0"
project.ext.jomlVersion = "1.10.8"
project.ext.physxVersion = "2.4.2"

group = 'io.github.lndf'
version = '0.1.3'
description = 'GLEngine'

java.sourceCompatibility = JavaVersion.VERSION_11

sourceSets {
    main {
        java {
            srcDir "java/main/src"
        }
        resources {
            srcDir "java/main/resources"
        }
    }
    test {
        java {
            srcDir "java/test/src"
        }
        resources {
            srcDir "java/test/resources"
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

	api "org.lwjgl:lwjgl"
	api "org.lwjgl:lwjgl-assimp"
	api "org.lwjgl:lwjgl-glfw"
	api "org.lwjgl:lwjgl-openal"
	api "org.lwjgl:lwjgl-opengl"
	api "org.lwjgl:lwjgl-stb"

	runtimeOnly "org.lwjgl:lwjgl::natives-linux"
	//runtimeOnly "org.lwjgl:lwjgl::natives-linux-arm64"
	//runtimeOnly "org.lwjgl:lwjgl::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl::natives-macos"
	//runtimeOnly "org.lwjgl:lwjgl::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl::natives-windows"

	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-linux"
	//runtimeOnly "org.lwjgl:lwjgl-assimp::natives-linux-arm64"
	//runtimeOnly "org.lwjgl:lwjgl-assimp::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-macos"
	//runtimeOnly "org.lwjgl:lwjgl-assimp::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-windows"

	runtimeOnly "org.lwjgl:lwjgl-glfw::natives-linux"
	//runtimeOnly "org.lwjgl:lwjgl-glfw::natives-linux-arm64"
	//runtimeOnly "org.lwjgl:lwjgl-glfw::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-glfw::natives-macos"
	//runtimeOnly "org.lwjgl:lwjgl-glfw::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-glfw::natives-windows"

	runtimeOnly "org.lwjgl:lwjgl-openal::natives-linux"
	//runtimeOnly "org.lwjgl:lwjgl-openal::natives-linux-arm64"
	//runtimeOnly "org.lwjgl:lwjgl-openal::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-macos"
	//runtimeOnly "org.lwjgl:lwjgl-openal::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-windows"

	runtimeOnly "org.lwjgl:lwjgl-opengl::natives-linux"
	//runtimeOnly "org.lwjgl:lwjgl-opengl::natives-linux-arm64"
	//runtimeOnly "org.lwjgl:lwjgl-opengl::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-opengl::natives-macos"
	//runtimeOnly "org.lwjgl:lwjgl-opengl::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-opengl::natives-windows"

	runtimeOnly "org.lwjgl:lwjgl-stb::natives-linux"
	//runtimeOnly "org.lwjgl:lwjgl-stb::natives-linux-arm64"
	//runtimeOnly "org.lwjgl:lwjgl-stb::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-macos"
	//runtimeOnly "org.lwjgl:lwjgl-stb::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-windows"

	api "org.joml:joml:${jomlVersion}"
	
	//PhysX
	api "de.fabmax:physx-jni:$physxVersion"
	
    runtimeOnly "de.fabmax:physx-jni:$physxVersion:natives-windows"
    runtimeOnly "de.fabmax:physx-jni:$physxVersion:natives-linux"
    runtimeOnly "de.fabmax:physx-jni:$physxVersion:natives-macos"
	
}

java {
	withSourcesJar()
	withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'io.github.lndf'
            artifactId = 'glengine'

            from components.java

            pom {
                name = 'glengine'
                description = 'OpenGL Engine'
                url = 'https://github.com/LNDF/GLEngine'
                inceptionYear = '2020'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://spdx.org/licenses/Apache-2.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'LNDF'
                        name = 'Lander Gallastegi'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/LNDF/GLEngine.git'
                    developerConnection = 'scm:git:ssh://github.com/LNDF/GLEngine.git'
                    url = 'https://github.com/LNDF/GLEngine'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('maven-deploy')
        }
    }
}

jreleaser {
	signing {
		active = 'ALWAYS'
		armored = true
		publicKey = System.getenv("GPG_PUBLIC_KEY")
		secretKey = System.getenv("GPG_SECRET_KEY")
		passphrase = System.getenv("GPG_PASSPHRASE")
	}
	release {
        github {
            skipRelease = true
			token = "dummy"
        }
    }
	deploy {
		maven {
			mavenCentral {
				sonatype {
					active = 'ALWAYS'
					url = 'https://central.sonatype.com/api/v1/publisher'
					username = System.getenv("SONATYPE_USERNAME")
					password = System.getenv("SONATYPE_PASSWORD")
					stagingRepository('build/maven-deploy')
				}
			}
		}
	}
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}